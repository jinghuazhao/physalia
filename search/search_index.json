{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"physalia The purpose for this repository, named after the Physalia GWAS-course, https://github.com/jinghuazhao/GWAS-course when in preparation, was to record basic uses of GitHub as well as call for contributions to GitHub repositories. How to contribute (Adapted from Apress ) Efforts are highly welcome as a long-term project, via the following steps: Make sure you have a GitHub account. Fork a repository. Create a new branch on which to make your change, e.g. git checkout -b my_code_contribution Commit your change. Include a commit message describing the correction. Please note that if your commit message is not clear, the correction will not be accepted. Submit a pull request. A summary of files File Description api.md Command-line repository creation IDE.md GUI for GitHub repository maintenance Notes.md Important notes slides.md A showcase of Markdown slides tests.md Tests of MathJax and mermaid README.md this file csd3.sh A package-building example setup.sh setup for a standard repository ssh.sh setup for SSH docs.sh batch file for add/commit/push operations For additional information, see GitHub-matters, https://cambridge-ceu.github.io/GitHub-matters/ .","title":""},{"location":"#physalia","text":"The purpose for this repository, named after the Physalia GWAS-course, https://github.com/jinghuazhao/GWAS-course when in preparation, was to record basic uses of GitHub as well as call for contributions to GitHub repositories.","title":"physalia"},{"location":"#how-to-contribute","text":"(Adapted from Apress ) Efforts are highly welcome as a long-term project, via the following steps: Make sure you have a GitHub account. Fork a repository. Create a new branch on which to make your change, e.g. git checkout -b my_code_contribution Commit your change. Include a commit message describing the correction. Please note that if your commit message is not clear, the correction will not be accepted. Submit a pull request.","title":"How to contribute"},{"location":"#a-summary-of-files","text":"File Description api.md Command-line repository creation IDE.md GUI for GitHub repository maintenance Notes.md Important notes slides.md A showcase of Markdown slides tests.md Tests of MathJax and mermaid README.md this file csd3.sh A package-building example setup.sh setup for a standard repository ssh.sh setup for SSH docs.sh batch file for add/commit/push operations For additional information, see GitHub-matters, https://cambridge-ceu.github.io/GitHub-matters/ .","title":"A summary of files"},{"location":"IDE/","text":"IDE Git comes with its own GUI as well as a shell, which has a Linux flavour to enable operations under Linux/Unix, Mac and Windows. git gui and gitk . Atom . GitHub Destkop . Visual Studio Code . IDEs such as RStudio and Visual Studio Code are able to work with Git, but the following GUIs are purposely built. Git-Cola Hosted at https://git-cola.github.io/ and made available with sudo apt install git-cola git-cola & GitKraken Hosted at https://www.gitkraken.com/ and made available with sudo apt install libgnome-keyring-common sudo apt install libgnome-keyring-dev wget -qO- https://release.gitkraken.com/linux/gitkraken-amd64.tar.gz | tar fvxz - cd gitkraken ln -s $PWD/gitkraken $HOME/bin/gitkraken gitkraken & SmartGit Hosted at https://www.syntevo.com/smartgit/ and made available with wget -qO- https://www.syntevo.com/downloads/smartgit/smartgit-linux-18_1_4.tar.gz | tar fvxz - cd smartgit ln -s $PWD/bin/smartgit.sh $HOME/bin/smartgit.sh smartgit.sh & sourcetree web: https://www.sourcetreeapp.com/","title":"IDE"},{"location":"IDE/#ide","text":"Git comes with its own GUI as well as a shell, which has a Linux flavour to enable operations under Linux/Unix, Mac and Windows. git gui and gitk . Atom . GitHub Destkop . Visual Studio Code . IDEs such as RStudio and Visual Studio Code are able to work with Git, but the following GUIs are purposely built.","title":"IDE"},{"location":"IDE/#git-cola","text":"Hosted at https://git-cola.github.io/ and made available with sudo apt install git-cola git-cola &","title":"Git-Cola"},{"location":"IDE/#gitkraken","text":"Hosted at https://www.gitkraken.com/ and made available with sudo apt install libgnome-keyring-common sudo apt install libgnome-keyring-dev wget -qO- https://release.gitkraken.com/linux/gitkraken-amd64.tar.gz | tar fvxz - cd gitkraken ln -s $PWD/gitkraken $HOME/bin/gitkraken gitkraken &","title":"GitKraken"},{"location":"IDE/#smartgit","text":"Hosted at https://www.syntevo.com/smartgit/ and made available with wget -qO- https://www.syntevo.com/downloads/smartgit/smartgit-linux-18_1_4.tar.gz | tar fvxz - cd smartgit ln -s $PWD/bin/smartgit.sh $HOME/bin/smartgit.sh smartgit.sh &","title":"SmartGit"},{"location":"IDE/#sourcetree","text":"web: https://www.sourcetreeapp.com/","title":"sourcetree"},{"location":"Notes/","text":"Notes Getting helps Consult git-scm command reference , man git man git-add ... The latter will give more specific command-line options available. Git Bash for Windows It is helpful to note that c:/ and u:/ can be used as well as /c and /u, respectively. Windows subsystem for Linux (WSL) It may be necessary to map network drives, as is noted here, https://jinghuazhao.github.io/Computational-Statistics/SYSTEMS/#wsl . sudo mkdir /mnt/u sudo mount -t drvfs U: /mnt/u sudo umount /mnt/u or sudo mkdir /mnt/u sudo mount -t drvfs '\\\\me-filer1.medschl.cam.ac.uk\\home$\\jhz22' /mnt/u sudo mount -t drvfs U: /mnt/u MarkDown code extraction To extract bash code from GitHub markdown, the following is helpful, sudo apt install npm sudo npm install -g codedown cat README.md | \\ codedown bash This also works when the keyword is wrapped in braces, e.g., {r}. In fact, we it is a rather short implementation: #!/usr/bin/env node var marked = require('marked'); var readline = require('readline'); var codedown = require('./lib/codedown.js'); if (process.argv.length >= 3) { var source = []; readline.createInterface({ terminal: false, input: process.stdin, }).on('line', function (line) { source.push(line); }).on('close', function () { var lang = process.argv[2]; var separator = process.argv[3]; output = codedown(source.join('\\n'), lang, separator); console.log(output); }); } else { console.log('usage: codedown <lang> [<separator>]'); console.log('ex: codedown haskell'); } Additional information on npm (Node Package Manager) is available from https://www.w3schools.com/whatis/whatis_npm.asp . Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript engine, available from https://nodejs.org/en/download/ . MarkDown editor One may prefer Typora, available from https://typora.io/ . In particular, it supports mermaid, e.g., https://mermaid-js.github.io/mermaid-live-editor/ . The following is an example generated from the link to SVG, The following code sets up remarkable. wget https://remarkableapp.github.io/files/remarkable_1.87_all.deb sudo apt-get update sudo apt-get install gir1.2-webkit-3.0 sudo dpkg -i remarkable_1.87_all.deb sudo apt-get install -f git clone https://github.com/mathjax/MathJax.git MathJax The last step enables mathtype formatting in the html format (e.g., via pandoc) with <script type=\"text/javascript\" src=\"MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script> <script type=\"text/javascript\" src=\"MathJax/MathJax.js\"></script> MathJax and mermaid On-the-fly examples for html are initially here from the SCALLOP-Seq projects, MathJax, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mathjax.html mermaid, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mermaid.html and found their new home here, MathJax, https://jinghuazhao.github.io/physalia/tests/mathjax.html mermaid, https://jinghuazhao.github.io/physalia/tests/mermaid.html It is somewhat unwieldy to create a mermaid diagram in PDF via pandoc . Suppose our diagram is in gaawr2.mmd , module load ceuadmin/node npm install -g @mermaid-js/mermaid-cli which mmdc mmdc -p puppeteer-config.json -i gaawr2.mmd -o gawwr2.png where our puppeteer-config.json is as follows, { \"executablePath\": \"/usr/local/Cluster-Apps/ceuadmin/chrome/132.0.6834.110/chrome\", \"args\": [\"--no-sandbox\", \"--disable-setuid-sandbox\"] } When gaawr2.mmd contains mermaid directives as in Markdown, many image files can be generated. Octotree Employ this add-on for a drop-down menu within your browser for GitHub repositories. Pop-up windows A window may pop up for password, which could cause problems with command-line interface but this can be disabled with unset SSH_ASKPASS or unset GIT_ASKPASS which could be part of .bashrc . Alternatively, this could be achieved with disabling DISPLAY, i.e., DISPLAY= git push Additional tips # https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository # recover directory R-packages that has been deleted git checkout $(git rev-list -n 1 HEAD -- \"R-packages\")^ -- \"R-packages\" # or zsh with the EXTENDED_GLOB option enabled for $file git checkout $(git rev-list -n 1 HEAD -- \"$file\")~1 -- \"$file\" # Recursive clone git clone --recursive https://github.com/ekg/vcflib/ # add git add README.md # config git config --global --unset-all core.editor git config --unset-all core.editor git config --global core.editor \"pico -w\" # commit git commit -m \"README\" # diff git diff README.md # mv git mv -f README.md NOTES.md # pull git pull # push git push # rebase git rebase # reset git reset --hard # revert git revert # rm git rm README.md # clean git clean -d -f -x As with many repositories here, a collection of the commands can be built into a batch file to save typing. Token Login at https://github.com/settings/tokens and regenerate; make sure to make a copy afterwards. Utilities git recall . git-extras .","title":"Notes"},{"location":"Notes/#notes","text":"","title":"Notes"},{"location":"Notes/#getting-helps","text":"Consult git-scm command reference , man git man git-add ... The latter will give more specific command-line options available.","title":"Getting helps"},{"location":"Notes/#git-bash-for-windows","text":"It is helpful to note that c:/ and u:/ can be used as well as /c and /u, respectively.","title":"Git Bash for Windows"},{"location":"Notes/#windows-subsystem-for-linux-wsl","text":"It may be necessary to map network drives, as is noted here, https://jinghuazhao.github.io/Computational-Statistics/SYSTEMS/#wsl . sudo mkdir /mnt/u sudo mount -t drvfs U: /mnt/u sudo umount /mnt/u or sudo mkdir /mnt/u sudo mount -t drvfs '\\\\me-filer1.medschl.cam.ac.uk\\home$\\jhz22' /mnt/u sudo mount -t drvfs U: /mnt/u","title":"Windows subsystem for Linux (WSL)"},{"location":"Notes/#markdown-code-extraction","text":"To extract bash code from GitHub markdown, the following is helpful, sudo apt install npm sudo npm install -g codedown cat README.md | \\ codedown bash This also works when the keyword is wrapped in braces, e.g., {r}. In fact, we it is a rather short implementation: #!/usr/bin/env node var marked = require('marked'); var readline = require('readline'); var codedown = require('./lib/codedown.js'); if (process.argv.length >= 3) { var source = []; readline.createInterface({ terminal: false, input: process.stdin, }).on('line', function (line) { source.push(line); }).on('close', function () { var lang = process.argv[2]; var separator = process.argv[3]; output = codedown(source.join('\\n'), lang, separator); console.log(output); }); } else { console.log('usage: codedown <lang> [<separator>]'); console.log('ex: codedown haskell'); } Additional information on npm (Node Package Manager) is available from https://www.w3schools.com/whatis/whatis_npm.asp . Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript engine, available from https://nodejs.org/en/download/ .","title":"MarkDown code extraction"},{"location":"Notes/#markdown-editor","text":"One may prefer Typora, available from https://typora.io/ . In particular, it supports mermaid, e.g., https://mermaid-js.github.io/mermaid-live-editor/ . The following is an example generated from the link to SVG, The following code sets up remarkable. wget https://remarkableapp.github.io/files/remarkable_1.87_all.deb sudo apt-get update sudo apt-get install gir1.2-webkit-3.0 sudo dpkg -i remarkable_1.87_all.deb sudo apt-get install -f git clone https://github.com/mathjax/MathJax.git MathJax The last step enables mathtype formatting in the html format (e.g., via pandoc) with <script type=\"text/javascript\" src=\"MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script> <script type=\"text/javascript\" src=\"MathJax/MathJax.js\"></script>","title":"MarkDown editor"},{"location":"Notes/#mathjax-and-mermaid","text":"On-the-fly examples for html are initially here from the SCALLOP-Seq projects, MathJax, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mathjax.html mermaid, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mermaid.html and found their new home here, MathJax, https://jinghuazhao.github.io/physalia/tests/mathjax.html mermaid, https://jinghuazhao.github.io/physalia/tests/mermaid.html It is somewhat unwieldy to create a mermaid diagram in PDF via pandoc . Suppose our diagram is in gaawr2.mmd , module load ceuadmin/node npm install -g @mermaid-js/mermaid-cli which mmdc mmdc -p puppeteer-config.json -i gaawr2.mmd -o gawwr2.png where our puppeteer-config.json is as follows, { \"executablePath\": \"/usr/local/Cluster-Apps/ceuadmin/chrome/132.0.6834.110/chrome\", \"args\": [\"--no-sandbox\", \"--disable-setuid-sandbox\"] } When gaawr2.mmd contains mermaid directives as in Markdown, many image files can be generated.","title":"MathJax and mermaid"},{"location":"Notes/#octotree","text":"Employ this add-on for a drop-down menu within your browser for GitHub repositories.","title":"Octotree"},{"location":"Notes/#pop-up-windows","text":"A window may pop up for password, which could cause problems with command-line interface but this can be disabled with unset SSH_ASKPASS or unset GIT_ASKPASS which could be part of .bashrc . Alternatively, this could be achieved with disabling DISPLAY, i.e., DISPLAY= git push","title":"Pop-up windows"},{"location":"Notes/#additional-tips","text":"# https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository # recover directory R-packages that has been deleted git checkout $(git rev-list -n 1 HEAD -- \"R-packages\")^ -- \"R-packages\" # or zsh with the EXTENDED_GLOB option enabled for $file git checkout $(git rev-list -n 1 HEAD -- \"$file\")~1 -- \"$file\" # Recursive clone git clone --recursive https://github.com/ekg/vcflib/ # add git add README.md # config git config --global --unset-all core.editor git config --unset-all core.editor git config --global core.editor \"pico -w\" # commit git commit -m \"README\" # diff git diff README.md # mv git mv -f README.md NOTES.md # pull git pull # push git push # rebase git rebase # reset git reset --hard # revert git revert # rm git rm README.md # clean git clean -d -f -x As with many repositories here, a collection of the commands can be built into a batch file to save typing.","title":"Additional tips"},{"location":"Notes/#token","text":"Login at https://github.com/settings/tokens and regenerate; make sure to make a copy afterwards.","title":"Token"},{"location":"Notes/#utilities","text":"git recall . git-extras .","title":"Utilities"},{"location":"api/","text":"API This is an exmaple of generating a repository from the command line. This approach enables git operation with ease at any given location. Benchmark #!/usr/bin/bash export user=jinghuazhao export token=$(cat ~/doc/access) export API=https://api.github.com export header=\"Accept: application/vnd.github.v3+json\" export name=Believe # 1. create the repository curl -X POST -u $user:$token -H \"$header\" -d '{\"name\": \"'\"$name\"'\"}' $API/user/repos # 2. local addition git init git config --global user.email \"jinghuazhao@hotmail.com\" git config --global user.name \"jinghuazhao@github.com\" git config --global url.\"https://jinghuazhao@github.com\".insteadOf \"https://github.com\" git remote add origin https://github.com/jinghuazhao/Believe.git git push --set-upstream origin main git add . git commit -m \"Believe\" git push -u origin main At one time, the git remote origin command had a typo which is fixed with git remote remove origin Generic version As noted elsewhere at this site, you can use codedown to extract the script before line 32, and adapt as follows, sed '32,$d' docs/api.md | \\ codedown bash | \\ sed 's/jinghuazhao@hotmail.com/your-email-address@yourdomain/; s/jinghuazhao/your-github-username/g; s/Believe/your-repository-name/' for a rather generic version: #!/usr/bin/bash export user=your-github-username export token=$(cat ~/doc/access) export API=https://api.github.com export header=\"Accept: application/vnd.github.v3+json\" export name=your-repository-name # 1. create the repository curl -X POST -u $user:$token -H \"$header\" -d '{\"name\": \"'\"$name\"'\"}' $API/user/repos # 2. local addition git init git config --global user.email \"your-email-address@yourdomain\" git config --global user.name \"your-github-username@github.com\" git config --global url.\"https://your-github-username@github.com\".insteadOf \"https://github.com\" git remote add origin https://github.com/your-github-username/your-repository-name.git git push --set-upstream origin main git add . git commit -m \"your-repository-name\" git push -u origin main","title":"API"},{"location":"api/#api","text":"This is an exmaple of generating a repository from the command line. This approach enables git operation with ease at any given location.","title":"API"},{"location":"api/#benchmark","text":"#!/usr/bin/bash export user=jinghuazhao export token=$(cat ~/doc/access) export API=https://api.github.com export header=\"Accept: application/vnd.github.v3+json\" export name=Believe # 1. create the repository curl -X POST -u $user:$token -H \"$header\" -d '{\"name\": \"'\"$name\"'\"}' $API/user/repos # 2. local addition git init git config --global user.email \"jinghuazhao@hotmail.com\" git config --global user.name \"jinghuazhao@github.com\" git config --global url.\"https://jinghuazhao@github.com\".insteadOf \"https://github.com\" git remote add origin https://github.com/jinghuazhao/Believe.git git push --set-upstream origin main git add . git commit -m \"Believe\" git push -u origin main At one time, the git remote origin command had a typo which is fixed with git remote remove origin","title":"Benchmark"},{"location":"api/#generic-version","text":"As noted elsewhere at this site, you can use codedown to extract the script before line 32, and adapt as follows, sed '32,$d' docs/api.md | \\ codedown bash | \\ sed 's/jinghuazhao@hotmail.com/your-email-address@yourdomain/; s/jinghuazhao/your-github-username/g; s/Believe/your-repository-name/' for a rather generic version: #!/usr/bin/bash export user=your-github-username export token=$(cat ~/doc/access) export API=https://api.github.com export header=\"Accept: application/vnd.github.v3+json\" export name=your-repository-name # 1. create the repository curl -X POST -u $user:$token -H \"$header\" -d '{\"name\": \"'\"$name\"'\"}' $API/user/repos # 2. local addition git init git config --global user.email \"your-email-address@yourdomain\" git config --global user.name \"your-github-username@github.com\" git config --global url.\"https://your-github-username@github.com\".insteadOf \"https://github.com\" git remote add origin https://github.com/your-github-username/your-repository-name.git git push --set-upstream origin main git add . git commit -m \"your-repository-name\" git push -u origin main","title":"Generic version"},{"location":"slides/","text":"Slides Preentation slides are greatly faciliated by Markdown, as is shown here. The template, slides.md and premeable.tex . All files: https://github.com/jinghuazhao/physalia/tree/master/docs/slides . PDF The slides in PDF are rendered as follows, #!/usr/bin/bash module load texlive pandoc -t beamer --citeproc --mathjax -s -V theme:metropolis slides.md -o slides.pdf See slides.pdf . html This could be done as follows via pandoc but marp appears to be far better, module load ceuadmin/node marp slides.md See slides.html . ppt/pptx Slides produced by pandoc look awkward but generally acceptable with these tools; they can be viewed via MicroSoft Edge without being downloaded, slides.ppt with images by online-convert, https://document.online-convert.com/convert/pdf-to-ppt . slides.pptx with OCR but <100% math conversion by iLovePDF, https://www.ilovepdf.com/pdf_to_powerpoint . CTAN This is to make beamerthemegotham.sty available. wget https://mirrors.ctan.org/macros/latex/contrib/beamer-contrib/themes/beamertheme-gotham.zip unzip beamertheme-gotham.zip cd beamertheme-gotham/ latex gotham.ins mkdir -p ~/texmf/tex/latex/beamertheme-gotham mv *.sty ~/texmf/tex/latex/beamertheme-gotham texhash ~/texmf kpsewhich beamerthemegotham.sty tlmgr install --user-mode l3kernel kpsewhich expl3.sty fc-list","title":"Slides"},{"location":"slides/#slides","text":"Preentation slides are greatly faciliated by Markdown, as is shown here. The template, slides.md and premeable.tex . All files: https://github.com/jinghuazhao/physalia/tree/master/docs/slides .","title":"Slides"},{"location":"slides/#pdf","text":"The slides in PDF are rendered as follows, #!/usr/bin/bash module load texlive pandoc -t beamer --citeproc --mathjax -s -V theme:metropolis slides.md -o slides.pdf See slides.pdf .","title":"PDF"},{"location":"slides/#html","text":"This could be done as follows via pandoc but marp appears to be far better, module load ceuadmin/node marp slides.md See slides.html .","title":"html"},{"location":"slides/#pptpptx","text":"Slides produced by pandoc look awkward but generally acceptable with these tools; they can be viewed via MicroSoft Edge without being downloaded, slides.ppt with images by online-convert, https://document.online-convert.com/convert/pdf-to-ppt . slides.pptx with OCR but <100% math conversion by iLovePDF, https://www.ilovepdf.com/pdf_to_powerpoint .","title":"ppt/pptx"},{"location":"slides/#ctan","text":"This is to make beamerthemegotham.sty available. wget https://mirrors.ctan.org/macros/latex/contrib/beamer-contrib/themes/beamertheme-gotham.zip unzip beamertheme-gotham.zip cd beamertheme-gotham/ latex gotham.ins mkdir -p ~/texmf/tex/latex/beamertheme-gotham mv *.sty ~/texmf/tex/latex/beamertheme-gotham texhash ~/texmf kpsewhich beamerthemegotham.sty tlmgr install --user-mode l3kernel kpsewhich expl3.sty fc-list","title":"CTAN"},{"location":"tests/","text":"Tests This directory consists of early experiments on MathJax and Mermaid. Over time, it is fortunate that GitHub now supports both. MathJax We have mathjax.html \\[ \\begin{aligned} & \\phi(x,y) = \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) = \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) = \\\\ & (x_1, \\ldots, x_n) \\left( \\begin{array}{ccc} \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\ \\vdots & \\ddots & \\vdots \\\\ \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n) \\end{array} \\right) \\left( \\begin{array}{c} y_1 \\\\ \\vdots \\\\ y_n \\end{array} \\right) \\end{aligned} \\] Mermaid We have mermaid.html graph TB; setup ==> 1 ==> 2; 1 --> idmap.do; 1 --> wgs.wrap; 2 --> 2.1 --> spa.sb; 2.1 --> bgen.sb; 2 --> 2.2 --> wes.R; 2.2 --> wgs.R; 2.2 --> weswgs.R; 2.2 --> rva.sb; 2.2 --> prune.wrap`;","title":"Tests"},{"location":"tests/#tests","text":"This directory consists of early experiments on MathJax and Mermaid. Over time, it is fortunate that GitHub now supports both.","title":"Tests"},{"location":"tests/#mathjax","text":"We have mathjax.html \\[ \\begin{aligned} & \\phi(x,y) = \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) = \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) = \\\\ & (x_1, \\ldots, x_n) \\left( \\begin{array}{ccc} \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\ \\vdots & \\ddots & \\vdots \\\\ \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n) \\end{array} \\right) \\left( \\begin{array}{c} y_1 \\\\ \\vdots \\\\ y_n \\end{array} \\right) \\end{aligned} \\]","title":"MathJax"},{"location":"tests/#mermaid","text":"We have mermaid.html graph TB; setup ==> 1 ==> 2; 1 --> idmap.do; 1 --> wgs.wrap; 2 --> 2.1 --> spa.sb; 2.1 --> bgen.sb; 2 --> 2.2 --> wes.R; 2.2 --> wgs.R; 2.2 --> weswgs.R; 2.2 --> rva.sb; 2.2 --> prune.wrap`;","title":"Mermaid"},{"location":"slides/slides/","text":"Key Features of the Template YAML Front Matter : Set metadata like the title, author, theme, and transitions. Headings : Use # for slide titles, ## or ### for smaller headers. Horizontal Slide Separation : Use --- to separate individual slides. Code Blocks : Wrap code in triple backticks for syntax highlighting. 10 Others : Title page image, icon on title, background shading, embedded image, citation @zhao06a, colored URLs, figure numbering, table numbering, multiple columns, page / total numbering. Slide with Image Code/Math \\texorpdfstring{( \\(a^2+b^2=c^2\\) )}{(a^2+b^2=c^2)} Example # Sample Python code def hello_world(): print(\"Hello, world!\") \\[ \\begin{aligned} & \\phi(x,y) = \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) = \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) = \\\\ & (x_1, \\ldots, x_n) \\left( \\begin{array}{ccc} \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\ \\vdots & \\ddots & \\vdots \\\\ \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n) \\end{array} \\right) \\left( \\begin{array}{c} y_1 \\\\ \\vdots \\\\ y_n \\end{array} \\right) \\end{aligned} \\] A Numbered Table Table:\\label{tab:mytable} A summary of files File Description nature-genetics.csl style premeable.tex premeable REFERENCES.bib reference library slides.html .html output slides.md markdown file slides.pdf .pdf output slides.sh* Bash command file sunflower.jpg* sunflower as a logo Two Columns ::: columns :::: {.column width=50%} Bullet points Point 1 Point 2 Point 3 :::: :::: {.column width=40%} Ordered list First item Another item A third item :::: ::: Figure \\ref{fig:physalia} and Table \\ref{tab:mytable} can be referred, too! Tools to Render Markdown Slides Four of them are indicated here, Pandoc : Convert Markdown to various formats, including slides in HTML5 or LaTeX Beamer. The current presentation is rendered with v2.18. Marp : A tool for creating slides directly from Markdown and the .html in this presentation is rendered with v4.1.1. Reveal.js : Use Reveal.js for beautiful web-based presentations. A wonderful demo is by quarto below. quarto : Contain comprehensive facilities for rendering presentations including support for pandoc/Reveal.js, see https://quarto.org/ . Videos for Marp Video tag is not supported. header-includes: - \\usepackage{multimedia} \\movie[width=640,height=360,poster,showcontrols]{Video tag is not supported for PDF.}{plum-popcorn.mp4} References","title":"A Template for Markdown Beamer Slides with Pandoc"},{"location":"slides/slides/#key-features-of-the-template","text":"YAML Front Matter : Set metadata like the title, author, theme, and transitions. Headings : Use # for slide titles, ## or ### for smaller headers. Horizontal Slide Separation : Use --- to separate individual slides. Code Blocks : Wrap code in triple backticks for syntax highlighting. 10 Others : Title page image, icon on title, background shading, embedded image, citation @zhao06a, colored URLs, figure numbering, table numbering, multiple columns, page / total numbering.","title":"Key Features of the Template"},{"location":"slides/slides/#slide-with-image","text":"","title":"Slide with Image"},{"location":"slides/slides/#codemath-texorpdfstringa2b2c2a2b2c2-example","text":"# Sample Python code def hello_world(): print(\"Hello, world!\") \\[ \\begin{aligned} & \\phi(x,y) = \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) = \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) = \\\\ & (x_1, \\ldots, x_n) \\left( \\begin{array}{ccc} \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\ \\vdots & \\ddots & \\vdots \\\\ \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n) \\end{array} \\right) \\left( \\begin{array}{c} y_1 \\\\ \\vdots \\\\ y_n \\end{array} \\right) \\end{aligned} \\]","title":"Code/Math \\texorpdfstring{(\\(a^2+b^2=c^2\\))}{(a^2+b^2=c^2)} Example"},{"location":"slides/slides/#a-numbered-table","text":"Table:\\label{tab:mytable} A summary of files File Description nature-genetics.csl style premeable.tex premeable REFERENCES.bib reference library slides.html .html output slides.md markdown file slides.pdf .pdf output slides.sh* Bash command file sunflower.jpg* sunflower as a logo","title":"A Numbered Table"},{"location":"slides/slides/#two-columns","text":"::: columns :::: {.column width=50%}","title":"Two Columns"},{"location":"slides/slides/#bullet-points","text":"Point 1 Point 2 Point 3 :::: :::: {.column width=40%}","title":"Bullet points"},{"location":"slides/slides/#ordered-list","text":"First item Another item A third item :::: ::: Figure \\ref{fig:physalia} and Table \\ref{tab:mytable} can be referred, too!","title":"Ordered list"},{"location":"slides/slides/#tools-to-render-markdown-slides","text":"Four of them are indicated here, Pandoc : Convert Markdown to various formats, including slides in HTML5 or LaTeX Beamer. The current presentation is rendered with v2.18. Marp : A tool for creating slides directly from Markdown and the .html in this presentation is rendered with v4.1.1. Reveal.js : Use Reveal.js for beautiful web-based presentations. A wonderful demo is by quarto below. quarto : Contain comprehensive facilities for rendering presentations including support for pandoc/Reveal.js, see https://quarto.org/ .","title":"Tools to Render Markdown Slides"},{"location":"slides/slides/#videos-for-marp","text":"Video tag is not supported. header-includes: - \\usepackage{multimedia} \\movie[width=640,height=360,poster,showcontrols]{Video tag is not supported for PDF.}{plum-popcorn.mp4}","title":"Videos for Marp"},{"location":"slides/slides/#references","text":"","title":"References"}]}