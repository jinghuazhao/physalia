{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"physalia The purpose for this repository, named after the Physalia GWAS-course, https://github.com/jinghuazhao/GWAS-course when in preparation, was to record basic uses of GitHub as well as call for contributions to GitHub repositories. How to contribute (Adapted from Apress ) Efforts are highly welcome as a long-term project, via the following steps: Make sure you have a GitHub account. Fork a repository. Create a new branch on which to make your change, e.g. git checkout -b my_code_contribution Commit your change. Include a commit message describing the correction. Please note that if your commit message is not clear, the correction will not be accepted. Submit a pull request. A summary of files File Description api.md Command-line repository creation IDE.md GUI for GitHub repository maintenance Notes.md Important notes README.md this file csd3.sh A package-building example setup.sh setup for a standard repository ssh.sh setup for SSH docs.sh batch file for add/commit/push operations For additional information, see GitHub-matters, https://cambridge-ceu.github.io/GitHub-matters/ .","title":""},{"location":"#physalia","text":"The purpose for this repository, named after the Physalia GWAS-course, https://github.com/jinghuazhao/GWAS-course when in preparation, was to record basic uses of GitHub as well as call for contributions to GitHub repositories.","title":"physalia"},{"location":"#how-to-contribute","text":"(Adapted from Apress ) Efforts are highly welcome as a long-term project, via the following steps: Make sure you have a GitHub account. Fork a repository. Create a new branch on which to make your change, e.g. git checkout -b my_code_contribution Commit your change. Include a commit message describing the correction. Please note that if your commit message is not clear, the correction will not be accepted. Submit a pull request.","title":"How to contribute"},{"location":"#a-summary-of-files","text":"File Description api.md Command-line repository creation IDE.md GUI for GitHub repository maintenance Notes.md Important notes README.md this file csd3.sh A package-building example setup.sh setup for a standard repository ssh.sh setup for SSH docs.sh batch file for add/commit/push operations For additional information, see GitHub-matters, https://cambridge-ceu.github.io/GitHub-matters/ .","title":"A summary of files"},{"location":"IDE/","text":"IDE Git comes with its own GUI as well as a shell, which has a Linux flavour to enable operations under Linux/Unix, Mac and Windows. git gui and gitk . Atom . GitHub Destkop . Visual Studio Code . IDEs such as RStudio and Visual Studio Code are able to work with Git, but the following GUIs are purposely built. Git-Cola Hosted at https://git-cola.github.io/ and made available with sudo apt install git-cola git-cola & GitKraken Hosted at https://www.gitkraken.com/ and made available with sudo apt install libgnome-keyring-common sudo apt install libgnome-keyring-dev wget -qO- https://release.gitkraken.com/linux/gitkraken-amd64.tar.gz | tar fvxz - cd gitkraken ln -s $PWD/gitkraken $HOME/bin/gitkraken gitkraken & SmartGit Hosted at https://www.syntevo.com/smartgit/ and made available with wget -qO- https://www.syntevo.com/downloads/smartgit/smartgit-linux-18_1_4.tar.gz | tar fvxz - cd smartgit ln -s $PWD/bin/smartgit.sh $HOME/bin/smartgit.sh smartgit.sh & sourcetree web: https://www.sourcetreeapp.com/","title":"IDE"},{"location":"IDE/#ide","text":"Git comes with its own GUI as well as a shell, which has a Linux flavour to enable operations under Linux/Unix, Mac and Windows. git gui and gitk . Atom . GitHub Destkop . Visual Studio Code . IDEs such as RStudio and Visual Studio Code are able to work with Git, but the following GUIs are purposely built.","title":"IDE"},{"location":"IDE/#git-cola","text":"Hosted at https://git-cola.github.io/ and made available with sudo apt install git-cola git-cola &","title":"Git-Cola"},{"location":"IDE/#gitkraken","text":"Hosted at https://www.gitkraken.com/ and made available with sudo apt install libgnome-keyring-common sudo apt install libgnome-keyring-dev wget -qO- https://release.gitkraken.com/linux/gitkraken-amd64.tar.gz | tar fvxz - cd gitkraken ln -s $PWD/gitkraken $HOME/bin/gitkraken gitkraken &","title":"GitKraken"},{"location":"IDE/#smartgit","text":"Hosted at https://www.syntevo.com/smartgit/ and made available with wget -qO- https://www.syntevo.com/downloads/smartgit/smartgit-linux-18_1_4.tar.gz | tar fvxz - cd smartgit ln -s $PWD/bin/smartgit.sh $HOME/bin/smartgit.sh smartgit.sh &","title":"SmartGit"},{"location":"IDE/#sourcetree","text":"web: https://www.sourcetreeapp.com/","title":"sourcetree"},{"location":"Notes/","text":"Notes Getting helps Consult git-scm command reference , man git man git-add ... The latter will give more specific command-line options available. Git Bash for Windows It is helpful to note that c:/ and u:/ can be used as well as /c and /u, respectively. MarkDown code extraction To extract bash code from GitHub markdown, the following is helpful, sudo apt install npm sudo npm install -g codedown cat README.md | \\ codedown bash This also works when the keyword is wrapped in braces, e.g., {r}. Additional information on npm (Node Package Manager) is available from https://www.w3schools.com/whatis/whatis_npm.asp. Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript engine, available from https://nodejs.org/en/download/. MarkDown editor One may prefer Typora, available from https://typora.io/ . In particular, it supports mermaid, e.g., https://mermaid-js.github.io/mermaid-live-editor/ . The following is an example generated from the link to SVG, The following code sets up remarkable. wget https://remarkableapp.github.io/files/remarkable_1.87_all.deb sudo apt-get update sudo apt-get install gir1.2-webkit-3.0 sudo dpkg -i remarkable_1.87_all.deb sudo apt-get install -f git clone https://github.com/mathjax/MathJax.git MathJax The last step enables mathtype formatting in the html format (e.g., via pandoc) with <script type=\"text/javascript\" src=\"MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script> <script type=\"text/javascript\" src=\"MathJax/MathJax.js\"></script> MathJax and mermaid On-the-fly examples for html are here, MathJax, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mathjax.html . mermaid, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mermaid.html . Octotree Employ this add-on for a drop-down menu within your browser for GitHub repositories. Pop-up windows A window may pop up for password, which could cause problems with command-line interface but this can be disabled with unset SSH_ASKPASS or unset GIT_ASKPASS which could be part of .bashrc . Alternatively, this could be achieved with disabling DISPLAY, i.e., DISPLAY= git push Additional tips # https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository # recover directory R-packages that has been deleted git checkout $(git rev-list -n 1 HEAD -- \"R-packages\")^ -- \"R-packages\" # or zsh with the EXTENDED_GLOB option enabled for $file git checkout $(git rev-list -n 1 HEAD -- \"$file\")~1 -- \"$file\" # Recursive clone git clone --recursive https://github.com/ekg/vcflib/ # add git add README.md # config git config --global --unset-all core.editor git config --unset-all core.editor git config --global core.editor \"pico -w\" # commit git commit -m \"README\" # diff git diff README.md # mv git mv -f README.md NOTES.md # pull git pull # push git push # rebase git rebase # reset git reset --hard # revert git revert # rm git rm README.md # clean git clean -d -f -x As with many repositories here, a collection of the commands can be built into a batch file to save typing. Token Login at https://github.com/settings/tokens and regenerate; make sure to make a copy afterwards. Utilities git recall . git-extras .","title":"Notes"},{"location":"Notes/#notes","text":"","title":"Notes"},{"location":"Notes/#getting-helps","text":"Consult git-scm command reference , man git man git-add ... The latter will give more specific command-line options available.","title":"Getting helps"},{"location":"Notes/#git-bash-for-windows","text":"It is helpful to note that c:/ and u:/ can be used as well as /c and /u, respectively.","title":"Git Bash for Windows"},{"location":"Notes/#markdown-code-extraction","text":"To extract bash code from GitHub markdown, the following is helpful, sudo apt install npm sudo npm install -g codedown cat README.md | \\ codedown bash This also works when the keyword is wrapped in braces, e.g., {r}. Additional information on npm (Node Package Manager) is available from https://www.w3schools.com/whatis/whatis_npm.asp. Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript engine, available from https://nodejs.org/en/download/.","title":"MarkDown code extraction"},{"location":"Notes/#markdown-editor","text":"One may prefer Typora, available from https://typora.io/ . In particular, it supports mermaid, e.g., https://mermaid-js.github.io/mermaid-live-editor/ . The following is an example generated from the link to SVG, The following code sets up remarkable. wget https://remarkableapp.github.io/files/remarkable_1.87_all.deb sudo apt-get update sudo apt-get install gir1.2-webkit-3.0 sudo dpkg -i remarkable_1.87_all.deb sudo apt-get install -f git clone https://github.com/mathjax/MathJax.git MathJax The last step enables mathtype formatting in the html format (e.g., via pandoc) with <script type=\"text/javascript\" src=\"MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script> <script type=\"text/javascript\" src=\"MathJax/MathJax.js\"></script>","title":"MarkDown editor"},{"location":"Notes/#mathjax-and-mermaid","text":"On-the-fly examples for html are here, MathJax, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mathjax.html . mermaid, https://jinghuazhao.github.io/SCALLOP-Seq/tests/mermaid.html .","title":"MathJax and mermaid"},{"location":"Notes/#octotree","text":"Employ this add-on for a drop-down menu within your browser for GitHub repositories.","title":"Octotree"},{"location":"Notes/#pop-up-windows","text":"A window may pop up for password, which could cause problems with command-line interface but this can be disabled with unset SSH_ASKPASS or unset GIT_ASKPASS which could be part of .bashrc . Alternatively, this could be achieved with disabling DISPLAY, i.e., DISPLAY= git push","title":"Pop-up windows"},{"location":"Notes/#additional-tips","text":"# https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository # recover directory R-packages that has been deleted git checkout $(git rev-list -n 1 HEAD -- \"R-packages\")^ -- \"R-packages\" # or zsh with the EXTENDED_GLOB option enabled for $file git checkout $(git rev-list -n 1 HEAD -- \"$file\")~1 -- \"$file\" # Recursive clone git clone --recursive https://github.com/ekg/vcflib/ # add git add README.md # config git config --global --unset-all core.editor git config --unset-all core.editor git config --global core.editor \"pico -w\" # commit git commit -m \"README\" # diff git diff README.md # mv git mv -f README.md NOTES.md # pull git pull # push git push # rebase git rebase # reset git reset --hard # revert git revert # rm git rm README.md # clean git clean -d -f -x As with many repositories here, a collection of the commands can be built into a batch file to save typing.","title":"Additional tips"},{"location":"Notes/#token","text":"Login at https://github.com/settings/tokens and regenerate; make sure to make a copy afterwards.","title":"Token"},{"location":"Notes/#utilities","text":"git recall . git-extras .","title":"Utilities"},{"location":"api/","text":"API This is an exmaple of generating a repository from the command-line. #!/usr/bin/bash export user=jinghuazhao export token=$(cat ~/doc/access) export API=https://api.github.com export header=\"Accept: application/vnd.github.v3+json\" export name=Believe # 1. create the repository curl -X POST -u $user:$token -H \"$header\" -d '{\"name\": \"'\"$name\"'\"}' $API/user/repos # 2. local addition git init git config --global user.email \"jinghuazhao@hotmail.com\" git config --global user.name \"jinghuazhao@github.com\" git config --global url.\"https://jinghuazhao@github.com\".insteadOf \"https://github.com\" git remote add origin https://github.com/jinghuazhao/Believe.git git push --set-upstream origin master git push -u origin master At one time, the git remote origin command had a typo which is fixed with git remote remove origin","title":"API"},{"location":"api/#api","text":"This is an exmaple of generating a repository from the command-line. #!/usr/bin/bash export user=jinghuazhao export token=$(cat ~/doc/access) export API=https://api.github.com export header=\"Accept: application/vnd.github.v3+json\" export name=Believe # 1. create the repository curl -X POST -u $user:$token -H \"$header\" -d '{\"name\": \"'\"$name\"'\"}' $API/user/repos # 2. local addition git init git config --global user.email \"jinghuazhao@hotmail.com\" git config --global user.name \"jinghuazhao@github.com\" git config --global url.\"https://jinghuazhao@github.com\".insteadOf \"https://github.com\" git remote add origin https://github.com/jinghuazhao/Believe.git git push --set-upstream origin master git push -u origin master At one time, the git remote origin command had a typo which is fixed with git remote remove origin","title":"API"}]}